import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from sklearn.linear_model import LinearRegression

#### ZAD 1  ### 
Rok = np.array([2000, 2002, 2005, 2007, 2010]).reshape(-1, 1)
PerBezrobocia = np.array([6.5, 7.0, 7.4, 8.2, 9.0])
model = LinearRegression().fit(Rok, PerBezrobocia)
def z1(year):
    a= model.predict([[year]])
    print(f"Przewidywane bezrobocie w {year:.0f} roku to :  {a[0]:.3f}")
z1(2021)
### ZAD 2
def zad2(proc):
    year = (proc - model.intercept_) / model.coef_
    year = year[0]
    print(f"{proc}% bezrobocia przekroczy w: {year:.0f} roku.")
zad2(12)
# ZAD3
fig, ax = plt.subplots()
ax.scatter(Rok, PerBezrobocia, color='b')
line, = ax.plot([], [], color='y')
def z3(frame):
    model = LinearRegression().fit(Rok[:frame+1], PerBezrobocia[:frame+1])
    line.set_data(Rok, model.predict(Rok))
    ax.set_title("Rok {}, Odchylenie: {:.3f}, Intercept: {:.3f}".format(Rok[frame], model.coef_[0], model.intercept_))
    ax.set_xlabel("Rok")
    ax.set_ylabel("Procent bezrobocia")
    return line,
anim = FuncAnimation(fig, z3, frames=len(Rok), interval=200, blit=True)

plt.show()